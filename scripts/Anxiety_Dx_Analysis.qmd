---
title: "ADAPT Treatment Effect on Anxiety Diagnoses"
subtitle: "Client: Lucy Nguyen. CSTAT Case: C1593"
author: 
  - name: Steven J. Pierce
    orcid: 0000-0002-0679-3019
    email: pierces1@msu.edu
    affiliations: 
      - name: Michigan State University, Center for Statistical Training and Consulting
params:
  SourceDir: "scripts/"
  SourceFile: "Anxiety_Dx_Analysis.qmd"
  LogFile: "Anxiety_Dx_Analysis_Draft.html"
bibliography: references.bib
csl: apa.csl
date: now
date-modified: last-modified
date-format: YYYY-MM-DD HH:mm:ss z
format: 
  html:
    output-file: "Anxiety_Dx_Analysis_Draft.html"
    toc: true
    toc-depth: 3
    toc-location: left
    number-sections: true
    number-depth: 3
    code-fold: true
    code-tools: true
    code-line-numbers: false
    embed-resources: true 
    anchor-sections: true
    theme: default
execute: 
  eval: true 
  echo: fenced 
  output: true 
  message: true 
  warning: true 
  error: true 
  include: true 
---

# Overview
This file contains results of statistical analyses performed by a 
[CSTAT](https://cstat.msu.edu) statistician for a project called 
*Effects of How Mental Health Diagnosis in Pediatric Patients with Functional Abdominal Pain Disorders Respond to Cognitive Behavioral Therapy Specifically for Anxiety Symptoms*, 
which was tracked by CSTAT as Case C1593. The original data come from one of 
Dr. Natoshia Cunningham's grants. Lucy is one of Dr. Cunningham's students. The
study was a randomized controlled trial of a tailored cognitive behavioral
therapy (CBT) treatment for functional abdominal pain in pediatric patients that
was called ADAPT [@Cunningham-RN8194]. The control group received treatment as 
usual (TAU).

# Setup
Most readers will want to just skip to @sec-Descriptive. This section is mostly
useful to the statistician who ran the analyses as methods and reproducibility 
documentation.

## Declare Path
This next chunk declares the path to this script relative to the project-level 
root directory. If the file is not in the right location under the project root
you'll get a warning message. This helps ensure relative paths are all working 
as expected. 

``` {r}
#| label: declare-path

# Declare path to this script relative to the project root directory.
here::i_am(path = paste0(params$SourceDir, params$SourceFile))
```

Note that `here()` creates a path relative to the location of the 
`ADAPT_Anxiety.Rproj` file that will be portable across different computers.
That's why we use that function when specifying file paths throughout the
script.

## Load Packages

```{r}
#| label: load-packages
#| include: true

library(devtools)     # for session_info()
library(here)         # for here() and i_am(), handling relative file paths. 
library(rmarkdown)    # for pandoc_version()
library(knitr)        # for kable()
options(kableExtra.latex.load_packages = FALSE)
library(kableExtra)   # for kable_styling() and formatting tables. 
library(tidyverse)    # Loads the dplyr, forcats, ggplot2, lubridate, purrr, 
                      # readr, stringr, tibble, and tidyr packages, for access 
                      # to %>%, select(), mutate(), etc. 
library(janitor)      # for adorn_totals()
library(broom)        # for tidy()
library(emmeans)      # for emmeans(), contrast()
library(mice)         # for mice(), pool(), etc. 
library(piercer)      # for all_classes()
library(quarto)       # for quarto_version()
```

## Read in Data
Here we just read in the data we need for the analyses. 

:::{.callout-important}
This script assumes you have already used

* `scripts/Import_SPSS_Data.qmd` to create `data/ADAPT_Clean.RData`.
* `scripts/Impute_Missing_Data.qmd` to create `data/ADAPT_Imputed.RData`.

:::

``` {r}
#| label: load-ADAPT-Clean-Data

load(file=here("data/ADAPT_Clean.RData"))
```

The imported `ADAPT_Clean_Data` data frame has `r nrow(ADAPT_Clean_Data)` rows 
and `r ncol(ADAPT_Clean_Data)` variables. Next we load the imputed data, along
with the subset of the raw data that was used in the imputation process.

``` {r}
#| label: load-ADAPT-Imputed-Data

load(file=here("data/ADAPT_Imputed.RData"))
```

The `ADAPT_Imputed_Data` object contains the multiply imputed datasets created 
from the `ADAPT_PreImpute` dataset by `mice()`.

# Descriptive Statistics on Raw (Unimputed) Data {#sec-Descriptive}

## Arm
@tbl-Arm-freq shows the frequency distribution of the randomized arm 
allocations. 

```{r}
#| label: tbl-Arm-freq
#| tbl-cap: Number of Patients by Randomized Arm in ADAPT_Clean_Data Data

ADAPT_Clean_Data %>% 
  xtabs(~Arm, addNA = TRUE, data = .) %>% 
  addmargins() %>% 
  as.data.frame() %>% 
  mutate(Type = case_when(Arm == "ADAPT" ~ "Intervention", 
                          Arm == "TAU" ~ "Control",
                          Arm == "Sum" ~ "Intervention + Control")) %>% 
  select(Arm, Type, Freq) %>% 
  kable(format = "html", booktabs = TRUE, 
        col.names = c("Randomized Arm", "Type", "Frequency")) %>% 
  kable_styling(bootstrap_options = "striped") 
```

## Outcomes 

### Generalized Anxiety Disorder (`GAD_Pre`, `GAD_Post`) 

```{r}
#| label: tbl-xtabs-GAD
#| tbl-cap: "Crosstab Diagnosed with GAD at Pretest vs Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(GAD_Pre),
         Dx_Post = addNA(GAD_Post)) %>% 
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-GAD-Change
#| tbl-cap: "Change in Diagnosis with GAD Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(GAD_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-GAD-Arm
#| tbl-cap: "Crosstab Diagnosed with GAD at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(GAD_Pre),
         Dx_Post = addNA(GAD_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-GAD-Change-Arm
#| tbl-cap: "Change in Diagnosis with GAD Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(GAD_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

### Social Anxiety Disorder (`Social_Pre`, `Social_Post`)

```{r}
#| label: tbl-xtabs-Social
#| tbl-cap: "Crosstab Diagnosed with Social Anxiety Disorder at Pretest vs at Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(Social_Pre),
         Dx_Post = addNA(Social_Post)) %>% 
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
   mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-Social-Change
#| tbl-cap: "Change in Diagnosis with Social Anxiety Disorder Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(Social_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-Social-Arm
#| tbl-cap: "Crosstab Diagnosed with Social Anxiety Disorder at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(Social_Pre),
         Dx_Post = addNA(Social_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-Social-Change-Arm
#| tbl-cap: "Change in Diagnosis with Social Anxiety Disorder Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(Social_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

### Separation Anxiety Disorder (`SAD_Pre`, `SAD_Post`)

```{r}
#| label: tbl-xtabs-SAD
#| tbl-cap: "Crosstab Diagnosed with SAD at Pretest vs Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(SAD_Pre),
         Dx_Post = addNA(SAD_Post)) %>%
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-SAD-Change
#| tbl-cap: "Change in Diagnosis with SAD Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(SAD_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-SAD-Arm
#| tbl-cap: "Crosstab Diagnosed with SAD at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(SAD_Pre),
         Dx_Post = addNA(SAD_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-SAD-Change-Arm
#| tbl-cap: "Change in Diagnosis with SAD Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(SAD_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

### Panic Disoder (`Panic_Pre`, `Panic_Post`)

```{r}
#| label: tbl-xtabs-Panic
#| tbl-cap: "Crosstab Diagnosed with Panic Disorder at Pretest vs Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(Panic_Pre),
         Dx_Post = addNA(Panic_Post)) %>%
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-Panic-Change
#| tbl-cap: "Change in Diagnosis with Panic Disorder Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(Panic_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-Panic-Arm
#| tbl-cap: "Crosstab Diagnosed with Panic Disorder at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(Panic_Pre),
         Dx_Post = addNA(Panic_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-Panic-Change-Arm
#| tbl-cap: "Change in Diagnosis with Panic Disorder Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(Panic_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

### Obsessive Compusive Disorder (`OCD_Pre`, `OCD_Post`)

```{r}
#| label: tbl-xtabs-OCD
#| tbl-cap: "Crosstab Diagnosed with OCD at Pretest vs Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(OCD_Pre),
         Dx_Post = addNA(OCD_Post)) %>%
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-OCD-Change
#| tbl-cap: "Change in Diagnosis with OCD Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(OCD_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-OCD-Arm
#| tbl-cap: "Crosstab Diagnosed with OCD at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(OCD_Pre),
         Dx_Post = addNA(OCD_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-OCD-Change-Arm
#| tbl-cap: "Change in Diagnosis with OCD Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(OCD_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

### Major Depressive Disorder (`MDD_Pre`, `MDD_Post`)

```{r}
#| label: tbl-xtabs-MDD
#| tbl-cap: "Crosstab Diagnosed with MDD at Pretest vs Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(MDD_Pre),
         Dx_Post = addNA(MDD_Post)) %>%
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-MDD-Change
#| tbl-cap: "Change in Diagnosis with GAD Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(MDD_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-MDD-Arm
#| tbl-cap: "Crosstab Diagnosed with MDD at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(MDD_Pre),
         Dx_Post = addNA(MDD_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-MDD-Change-Arm
#| tbl-cap: "Change in Diagnosis with MDD Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(MDD_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

### Dysthymia (`Dysthymia_Pre`, `Dysthymia_Post`)

```{r}
#| label: tbl-xtabs-Dysthymia
#| tbl-cap: "Crosstab Diagnosed with Dysthymia at Pretest vs Posttest"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(Dysthymia_Pre),
         Dx_Post = addNA(Dysthymia_Post)) %>%
  group_by(Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", 
        col.names = c("Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  add_indent(1:3) %>% 
  row_spec(row = 4, bold = TRUE) %>% 
  column_spec(column = 5, bold = TRUE) %>% 
  add_header_above(header = c(" ", "Diagnosed at Posttest" = 3, " "))
```

```{r}
#| label: tbl-Dysthymia-Change
#| tbl-cap: "Change in Diagnosis with Dysthymia Over Time"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(Dysthymia_Change)) %>% 
  group_by(Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  ungroup() %>% 
  adorn_totals(where = "row", name = "Sum") %>%
  kable(format = "html", digits = 0,
        col.names = c("Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = 5, bold = TRUE)
```

```{r}
#| label: tbl-xtabs-Dysthymia-Arm
#| tbl-cap: "Crosstab Diagnosed with Dysthymia at Pretest vs Posttest by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Pre = addNA(Dysthymia_Pre),
         Dx_Post = addNA(Dysthymia_Post)) %>% 
  group_by(Arm, Dx_Pre, Dx_Post, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = Dx_Post, names_prefix = "Dx_Post_", 
              values_from = N, values_fill = 0) %>% 
  mutate(Dx_Pre = as.character(Dx_Pre),
         Sum = Dx_Post_No + Dx_Post_Yes + Dx_Post_NA) %>%   
  group_by(Arm, .drop = FALSE) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row", name = "Sum")) %>%
  kable(format = "html", 
        col.names = c("Arm", "Diagnosed at Pretest", "No", "Yes", "NA", "Sum")) %>% 
  kable_styling() %>% 
  row_spec(row = c(4,8), bold = TRUE) %>% 
  column_spec(column = 6, bold = TRUE) %>% 
  add_header_above(header = c(" " = 2, "Diagnosed at Posttest" = 3, " ")) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

```{r}
#| label: tbl-Dysthymia-Change-Arm
#| tbl-cap: "Change in Diagnosis with Dysthymia Over Time by Arm"

ADAPT_Clean_Data %>% 
  mutate(Dx_Change = addNA(Dysthymia_Change)) %>% 
  group_by(Arm, Dx_Change, .drop = FALSE) %>% 
  summarise(N = n()) %>% 
  mutate(Percent = 100*N/sum(N)) %>% 
  group_modify(~ .x %>% adorn_totals(where = "row")) %>%
  ungroup() %>% 
  kable(format = "html", digits = 0,
        col.names = c("Arm", "Diagnosis Change", "N", "%")) %>% 
  kable_styling() %>% 
  row_spec(row = c(5,10), bold = TRUE) %>% 
  collapse_rows(columns = 1:2, valign = "top", latex_hline = "major", 
                row_group_label_position = "stack")
```

# Logistic Regression on Imputed Data
Although I originally intended to use log-linear models to test for symmetry and 
group-specific longitudinal trends toward decreasing proportions of positive 
diagnoses in the 2 arm x 2 pretest x 2 posttest contingency table for each 
outcome [@Meiser-RN1847; @von_Eye-RN2750; @von_Eye-RN8661; @von_Eye-RN8660], 
I was running into difficulty getting that to work. I've decided to use an 
ANCOVA style logistic regression modeling approach instead where I use arm 
and pretest to predict each post-test outcome. 

For all the models below, we are conducting intent-to-treat (ITT) analyses of 
the arm effect on the presence of a positive posttest diagnosis for each outcome 
after controlling for presence of a positive prestest diagnosis of the same 
outcome. We solved the problem of missing data through applying multiple 
imputation by chained equations [@van_Buuren-RN3962] with m = 18 imputed
datasets. The imputation used predictive mean matching. Thus, all eligible,
randomized participants in the study were retained in the analysis. The
parameter estimates were pooled across the analyses run on each of the imputed
datasets per standard practice.

Because the numbers of positive posttest diagnoses for the different outcomes 
is sometimes between 5 and 15, we should not use more than 2 predictors because 
one usually needs 5-9 events per parameter to get good estimates of logistic 
regression parameters [@Hosmer-RN2752]. I would like to use age, gender, and 
race as covariates, but for most of these outcomes that is unlikely to work due 
to the low event-rate combined with small sample size. For some of them, even 
having 2 predictors suggests the need for caution in interpreting the results. 

## Generalized Anxiety Disorder (`GAD_Pre`, `GAD_Post`) 

```{r}
#| label: fit-model-GAD

# Fit the set of models on imputed data. 
fit_GAD <- with(ADAPT_Imputed_Data,
                glm(GAD_Post ~ GAD_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_GAD <- pool(fit_GAD)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_GAD <- tidy(pooled_GAD, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_GAD <- tidy(pooled_GAD, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-GAD
#| tbl-cap: Pooled Logistic Regression Model Parameters for GAD
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_GAD <- left_join(CIs_GAD, OR_GAD, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_GAD %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

```{r}
#| label: emm-GAD

emm_GAD <- emmeans(fit_GAD, ~ Arm, regrid = "response") 
emm_GAD 
```

```{r}
#| label: emmc-GAD

emmc_test_GAD <- contrast(emm_GAD, method = "pairwise", conf.int = TRUE, 
           adjust = "none", type = "response") 
emmc_test_GAD

emmc_CI_GAD <- confint(emmc_test_GAD)
emmc_CI_GAD
```

## Social Anxiety Disorder (`Social_Pre`, `Social_Post`)

```{r}
#| label: fit-model-Social

# Fit the set of models on imputed data. 
fit_Social <- with(ADAPT_Imputed_Data,
                glm(Social_Post ~ Social_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_Social <- pool(fit_Social)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_Social <- tidy(pooled_Social, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_Social <- tidy(pooled_Social, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-Social
#| tbl-cap: Pooled Logistic Regression Model Parameters for Social
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_Social <- left_join(CIs_Social, OR_Social, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_Social %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

```{r}
#| label: emm-Social

emm_Social <- emmeans(fit_Social, ~ Arm, regrid = "response") 
emm_Social 
```

```{r}
#| label: emmc-Social

emmc_test_Social <- contrast(emm_Social, method = "pairwise", conf.int = TRUE, 
           adjust = "none", type = "response") 
emmc_test_Social

emmc_CI_Social <- confint(emmc_test_Social)
emmc_CI_Social
```

## Separation Anxiety Disorder (`SAD_Pre`, `SAD_Post`)

```{r}
#| label: fit-model-SAD

# Fit the set of models on imputed data. 
fit_SAD <- with(ADAPT_Imputed_Data,
                glm(SAD_Post ~ SAD_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_SAD <- pool(fit_SAD)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_SAD <- tidy(pooled_SAD, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_SAD <- tidy(pooled_SAD, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-SAD
#| tbl-cap: Pooled Logistic Regression Model Parameters for SAD
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_SAD <- left_join(CIs_SAD, OR_SAD, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_SAD %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

```{r}
#| label: emm-SAD

emm_SAD <- emmeans(fit_SAD, ~ Arm, regrid = "response") 
emm_SAD 
```

```{r}
#| label: emmc-SAD

emmc_test_SAD <- contrast(emm_SAD, method = "pairwise", conf.int = TRUE, 
           adjust = "none", type = "response") 
emmc_test_SAD

emmc_CI_SAD <- confint(emmc_test_SAD)
emmc_CI_SAD
```

## Panic Disoder (`Panic_Pre`, `Panic_Post`)

```{r}
#| label: fit-model-Panic

# Fit the set of models on imputed data. 
fit_Panic <- with(ADAPT_Imputed_Data,
                glm(Panic_Post ~ Panic_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_Panic <- pool(fit_Panic)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_Panic <- tidy(pooled_Panic, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_Panic <- tidy(pooled_Panic, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-Panic
#| tbl-cap: Pooled Logistic Regression Model Parameters for Panic
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_Panic <- left_join(CIs_Panic, OR_Panic, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_Panic %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

```{r}
#| label: emm-Panic

emm_Panic <- emmeans(fit_Panic, ~ Arm, regrid = "response") 
emm_Panic 
```

```{r}
#| label: emmc-Panic

emmc_test_Panic <- contrast(emm_Panic, method = "pairwise", conf.int = TRUE, 
           adjust = "none", type = "response") 
emmc_test_Panic

emmc_CI_Panic <- confint(emmc_test_Panic)
emmc_CI_Panic
```

## Obsessive Compusive Disorder (`OCD_Pre`, `OCD_Post`)

```{r}
#| label: fit-model-OCD

# Fit the set of models on imputed data. 
fit_OCD <- with(ADAPT_Imputed_Data,
                glm(OCD_Post ~ OCD_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_OCD <- pool(fit_OCD)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_OCD <- tidy(pooled_OCD, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_OCD <- tidy(pooled_OCD, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-OCD
#| tbl-cap: Pooled Logistic Regression Model Parameters for OCD
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_OCD <- left_join(CIs_OCD, OR_OCD, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_OCD %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

:::{.callout-important}
The extremely large standard errors for the intercept and OCD_Pre terms in  
@tbl-parameters-OCD are a sign that we have encountered a problem with 
separation [@Heinze-RN1125]. Brielfy stated, this happens when there is very 
little variability in the outcome at some combinations of values on the 
predictors. That causes problems with maximum likelihood estimation of the model 
parameters. While there is a potential solution to that via penalized 
estimation, it may be simpler just to not report this outcome. 

Look at the raw descriptive data in @tbl-OCD-Change and @tbl-OCD-Change-Arm. 
They show that *none of the patients in the study ever worsened*. For all the
other outcomes, at least a few people did worsen, even if it was only in one
study arm. So, the OCD outcome is unusual in that respect. 

Because the model is not producing trustorthy results, I am disabling the code 
below that would have estimated the marginal means and the difference between 
them for this outcome. 
:::


```{r}
#| label: emm-OCD
#| eval: false

emm_OCD <- emmeans(fit_OCD, ~ Arm, regrid = "response") 
emm_OCD 
```

```{r}
#| label: emmc-OCD
#| eval: false

emmc_test_OCD <- contrast(emm_OCD, method = "pairwise", conf.int = TRUE, 
           adjust = "none", type = "response") 
emmc_test_OCD

emmc_CI_OCD <- confint(emmc_test_OCD)
emmc_CI_OCD
```

## Major Depressive Disorder (`MDD_Pre`, `MDD_Post`)

```{r}
#| label: fit-model-MDD

# Fit the set of models on imputed data. 
fit_MDD <- with(ADAPT_Imputed_Data,
                glm(MDD_Post ~ MDD_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_MDD <- pool(fit_MDD)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_MDD <- tidy(pooled_MDD, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_MDD <- tidy(pooled_MDD, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-MDD
#| tbl-cap: Pooled Logistic Regression Model Parameters for MDD
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_MDD <- left_join(CIs_MDD, OR_MDD, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_MDD %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

```{r}
#| label: emm-MDD

emm_MDD <- emmeans(fit_MDD, ~ Arm, regrid = "response") 
emm_MDD 
```

```{r}
#| label: emmc-MDD

emmc_test_MDD <- contrast(emm_MDD, method = "pairwise", conf.int = TRUE, 
           adjust = "none", type = "response") 
emmc_test_MDD

emmc_CI_MDD <- confint(emmc_test_MDD)
emmc_CI_MDD
```

## Dysthymia (`Dysthymia_Pre`, `Dysthymia_Post`)

```{r}
#| label: fit-model-Dysthymia

# Fit the set of models on imputed data. 
fit_Dysthymia <- with(ADAPT_Imputed_Data,
                glm(Dysthymia_Post ~ Dysthymia_Pre + Arm, family = binomial))

# Pooled estimates across the set of models. 
pooled_Dysthymia <- pool(fit_Dysthymia)

# Extract pooled parameter estimates and CIs (on logit scale)
CIs_Dysthymia <- tidy(pooled_Dysthymia, conf.int = TRUE, exponentiate = FALSE) 

# Extract odds-ratios and CIs. 
OR_Dysthymia <- tidy(pooled_Dysthymia, conf.int = TRUE, exponentiate = TRUE) %>% 
  rename(OR = estimate, OR.LL = conf.low, OR.UL = conf.high) %>% 
  select(term, OR, OR.LL, OR.UL)
```

```{r}
#| label: tbl-parameters-Dysthymia
#| tbl-cap: Pooled Logistic Regression Model Parameters for Dysthymia
#| results: asis

FN <- paste("Pooled results after multiple imputation by chained equations",
            "(MICE) with predictive mean matching (PMM).",
            "b, between imputation variance;",
            "df, degrees of freedom for hypothesis testing with Barnard-Rubin",
            "adjustment;",
            "dfcom, degrees of freedom for a complete data analysis;",
            "fmi, fraction of missing information;",
            "labmda, proportion of total variance due to missingness;",
            "m, number of imputed datasets;",
            "riv, relative increase in variance due to noneresponse;",
            "ubar, mean of the variances.")

parameters_Dysthymia <- left_join(CIs_Dysthymia, OR_Dysthymia, by = join_by(term)) %>% 
  rename(Term = term, 
         Estimate = estimate, 
         SE = std.error,
         z = statistic,
         p = p.value, 
         Est.LL = conf.low, 
         Est.UL = conf.high) %>% 
  relocate(Term, Estimate, SE, Est.LL, Est.UL, OR, OR.LL, OR.UL, z, p) 
  
parameters_Dysthymia %>% 
  kable(., format = "html", booktabs = TRUE, digits = 3) %>% 
  kable_styling() %>% 
  add_header_above(header = c(" " = 3, "95% CI" = 2, " ", "OR 95% CI" = 2, 
                              "Wald Test" = 2, "Imputation Details" = 8)) %>% 
  footnote(general = FN, footnote_as_chunk = TRUE) %>% 
  cat()
```

```{r}
#| label: emm-Dysthymia

emm_Dysthymia <- emmeans(fit_Dysthymia, ~ Arm, regrid = "response") 
emm_Dysthymia
```

```{r}
#| label: emmc-Dysthymia

emmc_test_Dysthymia <- contrast(emm_Dysthymia, method = "pairwise", 
                                conf.int = TRUE, adjust = "none", 
                                type = "response") 
emmc_test_Dysthymia

emmc_CI_Dysthymia <- confint(emmc_test_Dysthymia)
emmc_CI_Dysthymia
```

## Summary of Estimated Mariginal Means

@tbl-emm-Arm-all shows the estimated marginal means (rates) for the two arms 
and associated 95% confidence intervals. The rates are proportions (or 
probabilities) of participents diagnosed with the relevant outcome at posttest. 
@fig-emm-Arm-all shows the marginal means and confidence intervals for each 
outcome in graphical form. 

::: {.callout-important}
Because the model for OCD was not working, I have omitted the marginal means 
for that outcome from this section. 
:::

```{r}
#| label: tbl-emm-Arm-all
#| tbl-cap: Estimated Marginal Means for Postest Diagnosis Rates by Outcome and 
#|          Arm
#| results: asis

# Table footnote.
FN <- paste0("Results for each outcome are averaged over the levels of ", 
             "corresponding pretest covariate. ",
             "Confidence intervals used 95% confidence level. ", 
             "Rates and confidence limits are back transformed from the ", 
             "logit-scale to probabilty/proportion scale.")

emms_Arm <- list(GAD_Post = emm_GAD, 
                 Social_Post = emm_Social, 
                 SAD_Post = emm_SAD, 
                 Panic_Post = emm_Panic, 
                 MDD_Post = emm_MDD, 
                 Dystymia_Post = emm_Dysthymia)

Outcome_Names <-  names(emms_Arm)

Outcome_Labels <- c("Generalized Anxiety Disorder", 
                    "Social Anxiety Disorder",
                    "Separation Anxiety Disorder",
                    "Panic Disorder", 
                    "Major Depressive Disorder",
                    "Dysthymia")

# Combine all EMMs to one tibble, then turn it into a formatted table. 
map_dfr(lapply(emms_Arm, as_tibble), bind_rows, .id = "Variable") %>% 
  mutate(Outcome = factor(Variable, levels = Outcome_Names, 
                          labels = Outcome_Labels)) %>% 
  rename(Rate = prob, CI95.LL= lower.CL, CI95.UL= upper.CL) %>% 
  select(Outcome, Arm, Rate, SE, df, CI95.LL, CI95.UL) %>% 
  arrange(Outcome, desc(Arm)) %>% 
  kable(., format = "html", digits = 3) %>% 
  kable_styling(full_width = FALSE) %>% 
  collapse_rows(., columns = 1, valign = "top") %>% 
  footnote(., general = FN) %>% 
  cat()
```

```{r}
#| label: fig-emm-Arm-all
#| fig-cap: Estimated Marginal Means for Posttest Diagnosis Rates by Outcome and
#|          Arm 
#| fig-subcap: 
#|   - "Generalized Anxiety Disorder (GAD_Post)"
#|   - "Social Anxiety Disorder (Social_Post)"
#|   - "Separation Anxiety Disorder (SAD_Post)"
#|   - "Panic Disorder (Panic_Post)"
#|   - "Major Depressive Disorder (MDD_Post)"
#|   - "Dysthymia (Dysthymia_Post)"
#| fig-height: 1

mylimits <- c(-0.05, 0.70)
mybreaks <- seq(0, 1, 0.1)
myxlab <- "Posttest Diagnosis Rate"

plot(emm_GAD, comparisons = TRUE, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits, breaks = mybreaks)
plot(emm_Social, comparisons = TRUE, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits, breaks = mybreaks)
plot(emm_SAD, comparisons = TRUE, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits, breaks = mybreaks)
plot(emm_Panic, comparisons = TRUE, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits, breaks = mybreaks)
plot(emm_MDD, comparisons = TRUE, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits, breaks = mybreaks)
plot(emm_Dysthymia, comparisons = TRUE, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits, breaks = mybreaks)
```



## Contrasts Between Estimated Marginal Means
While the odds-ratios in the logistic regression model summary tables are one 
measure of effect size, it may also be useful to estimate the difference between 
the marginal means for posttest diagnosis rates for each arm. This is 
accomplished by using a contrast between the4 marginal means and yields a 
result corresponding to an absolute differences in the rates, along with a 
corresponding confidence interval. @tbl-emmc-Arm-all shows those estimated 
differences between the two arms and @fig-emmc-Arm-all show3s the result in 
graphical form. 

```{r}
#| label: tbl-emmc-Arm-all
#| tbl-cap: Contrasts Between Estimated Marginal Means for Postest Diagnosis 
#|          Rates by Outcome 
#| results: asis

# Table footnote.
FN <- paste0("Results for each outcome are averaged over the levels of ", 
             "corresponding pretest covariate. ",
             "Confidence intervals used 95% confidence level. ", 
             "Differences and confidence limits are back transformed from the ", 
             "logit-scale to probabilty/proportion scale.")

emmc_Arm <- list(GAD_Post = emmc_CI_GAD, 
                 Social_Post = emmc_CI_Social, 
                 SAD_Post = emmc_CI_SAD, 
                 Panic_Post = emmc_CI_Panic, 
                 MDD_Post = emmc_CI_MDD, 
                 Dystymia_Post = emmc_CI_Dysthymia)

Outcome_Names <-  names(emmc_Arm)

Outcome_Labels <- c("Generalized Anxiety Disorder", 
                    "Social Anxiety Disorder",
                    "Separation Anxiety Disorder",
                    "Panic Disorder", 
                    "Major Depressive Disorder",
                    "Dysthymia")

# Combine all contrast CIs to one tibble, then turn it into a formatted table. 
map_dfr(lapply(emmc_Arm, as_tibble), bind_rows, .id = "Variable") %>% 
  mutate(Outcome = factor(Variable, levels = Outcome_Names, 
                          labels = Outcome_Labels)) %>% 
  rename(Difference = estimate, CI95.LL= lower.CL, CI95.UL= upper.CL) %>% 
  select(Outcome, Difference, SE, df, CI95.LL, CI95.UL) %>% 
  arrange(Outcome) %>% 
  kable(., format = "html", digits = 3) %>% 
  kable_styling(full_width = FALSE) %>% 
  collapse_rows(., columns = 1, valign = "top") %>% 
  footnote(., general = FN) %>% 
  cat()
```

```{r}
#| label: fig-emmc-Arm-all
#| fig-cap: Contrasts Between Estimated Marginal Means for Posttest Diagnosis 
#|          Rates by Outcome 
#| fig-subcap: 
#|   - "Generalized Anxiety Disorder (GAD_Post)"
#|   - "Social Anxiety Disorder (Social_Post)"
#|   - "Separation Anxiety Disorder (SAD_Post)"
#|   - "Panic Disorder (Panic_Post)"
#|   - "Major Depressive Disorder (MDD_Post)"
#|   - "Dysthymia (Dysthymia_Post)"
#| fig-height: 1

mylimits <- c(-0.60, 0.40)
mybreaks <- seq(from = -0.60, to = 0.30, by = 0.10)
myxlab <- "Difference in Posttest Diagnosis Rates"

plot(emmc_CI_GAD, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits) +
  geom_vline(xintercept = 0, col = "red")
plot(emmc_CI_Social, ylab = "Arm") +
  scale_x_continuous(limits = mylimits) +
  geom_vline(xintercept = 0, col = "red")
plot(emmc_CI_SAD, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits) +
  geom_vline(xintercept = 0, col = "red")
plot(emmc_CI_Panic, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits) +
  geom_vline(xintercept = 0, col = "red")
plot(emmc_CI_MDD, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits) +
  geom_vline(xintercept = 0, col = "red")
plot(emmc_CI_Dysthymia, ylab = "Arm", xlab = myxlab) +
  scale_x_continuous(limits = mylimits) +
  geom_vline(xintercept = 0, col = "red")
```

# References
::: {#refs}
:::

# Software Information
We used [R](https://www.r-project.org/) as our main computing environment and 
[Quarto](https://quarto.org/) scripts to enhance reproducibility. We used 
[RStudio](www.rstudio.org) as the editor to interface with R and Quarto. 

- Software chain:
  **qmd file > RStudio > Quarto > R > knitr > md file > Pandoc > html file**.
- Source file: **`r params$SourceFile`**
- Output file: **`r params$LogFile`**
- [Quarto `r quarto_version()`](https://quarto.org/) runs `*.qmd` files through 
  [R](https://www.r-project.org/) and [knitr](https://yihui.org/knitr/) to 
  produce `*.md` markdown files.
- [Pandoc `r rmarkdown::pandoc_version()`](https://pandoc.org) converts markdown 
  files (`*.md`) to other formats, including LaTeX (`*.tex`) and HTML (`*.html`) 
  among others.

This document was generated using the following computational environment and 
dependencies: 

``` {r}
#| label: show-version
#| echo: true

# Get R and R package version numbers in use.
devtools::session_info()
```

